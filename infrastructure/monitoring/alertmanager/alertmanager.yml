global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@smartalarm.com'
  smtp_auth_username: 'alerts@smartalarm.com'
  smtp_auth_password: 'your-smtp-password'

route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m

    # SLA alerts - escalated notification
    - match_re:
        sla: '.*'
      receiver: 'sla-alerts'
      group_wait: 30s
      repeat_interval: 15m

    # Warning alerts - standard notification
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 2m
      repeat_interval: 30m

    # Business alerts - business hours only
    - match:
        type: business
      receiver: 'business-alerts'
      group_wait: 5m
      repeat_interval: 2h
      active_time_intervals:
        - business-hours

receivers:
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://localhost:5001/webhook'
        send_resolved: true

  - name: 'critical-alerts'
    email_configs:
      - to: 'oncall@smartalarm.com'
        subject: '[CRITICAL] Smart Alarm Alert: {{ .GroupLabels.alertname }}'
        body: |
          Alert: {{ .GroupLabels.alertname }}
          Severity: {{ .CommonLabels.severity }}
          Service: {{ .CommonLabels.service }}

          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Runbook: {{ .Annotations.runbook_url }}

          Labels:
          {{ range .Labels.SortedPairs }}  {{ .Name }}: {{ .Value }}
          {{ end }}
          {{ end }}

          Dashboard: http://grafana.smartalarm.com/d/system-overview
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts-critical'
        title: 'Critical Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Runbook:* {{ .Annotations.runbook_url }}
          *Service:* {{ .CommonLabels.service }}
          {{ end }}
        send_resolved: true

  - name: 'sla-alerts'
    email_configs:
      - to: 'sla-team@smartalarm.com'
        subject: '[SLA BREACH] Smart Alarm: {{ .GroupLabels.alertname }}'
        body: |
          SLA Alert: {{ .GroupLabels.alertname }}
          SLA Type: {{ .CommonLabels.sla }}

          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}

          Immediate action required to restore SLA compliance.
    pagerduty_configs:
      - routing_key: 'your-pagerduty-integration-key'
        description: 'SLA Breach: {{ .GroupLabels.alertname }}'
        severity: 'critical'

  - name: 'warning-alerts'
    email_configs:
      - to: 'devops@smartalarm.com'
        subject: '[WARNING] Smart Alarm: {{ .GroupLabels.alertname }}'
        body: |
          Warning Alert: {{ .GroupLabels.alertname }}

          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}

  - name: 'business-alerts'
    email_configs:
      - to: 'business-team@smartalarm.com'
        subject: '[BUSINESS] Smart Alarm Metrics: {{ .GroupLabels.alertname }}'
        body: |
          Business Alert: {{ .GroupLabels.alertname }}

          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}

time_intervals:
  - name: business-hours
    time_intervals:
      - times:
          - start_time: '09:00'
            end_time: '18:00'
        weekdays: ['monday:friday']
        location: 'America/Sao_Paulo'

inhibit_rules:
  # Inhibit warning alerts if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'service']

  # Inhibit individual service alerts if system-wide alert is firing
  - source_match:
      alertname: 'SystemDown'
    target_match_re:
      alertname: '.*ServiceDown'
    equal: ['cluster']
