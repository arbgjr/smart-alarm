#!/bin/bash

# Smart Alarm - Verifica√ß√£o Final WSL
# Executa todos os testes e verifica√ß√µes necess√°rias

set -e  # Para em caso de erro

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=====================================${NC}"
echo -e "${BLUE}   Smart Alarm - Verifica√ß√£o WSL    ${NC}"
echo -e "${BLUE}=====================================${NC}"
echo ""

# Fun√ß√£o para verificar comando
check_command() {
    if command -v $1 &> /dev/null; then
        echo -e "${GREEN}‚úÖ $1 est√° instalado${NC}"
        if [ "$1" = "node" ]; then
            echo -e "   Vers√£o: $(node --version)"
        elif [ "$1" = "npm" ]; then
            echo -e "   Vers√£o: $(npm --version)"
        fi
    else
        echo -e "${RED}‚ùå $1 n√£o encontrado${NC}"
        return 1
    fi
}

# Verificar ambiente WSL
echo -e "${YELLOW}1. Verificando ambiente WSL...${NC}"
if grep -q Microsoft /proc/version; then
    echo -e "${GREEN}‚úÖ Executando em WSL${NC}"
    WSL_IP=$(hostname -I | awk '{print $1}')
    echo -e "${GREEN}   IP do WSL: ${WSL_IP}${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  N√£o detectado WSL (pode ser Linux nativo)${NC}"
    WSL_IP=$(hostname -I | awk '{print $1}')
    echo -e "${GREEN}   IP detectado: ${WSL_IP}${NC}"
fi
echo ""

# Verificar depend√™ncias
echo -e "${YELLOW}2. Verificando depend√™ncias...${NC}"
check_command "node"
check_command "npm"
echo ""

# Verificar estrutura do projeto
echo -e "${YELLOW}3. Verificando estrutura do projeto...${NC}"
if [ -d "frontend" ]; then
    echo -e "${GREEN}‚úÖ Diret√≥rio frontend encontrado${NC}"

    if [ -f "frontend/package.json" ]; then
        echo -e "${GREEN}‚úÖ package.json encontrado${NC}"
    else
        echo -e "${RED}‚ùå package.json n√£o encontrado${NC}"
    fi

    if [ -f "frontend/vite.config.ts" ]; then
        echo -e "${GREEN}‚úÖ vite.config.ts encontrado${NC}"

        # Verificar configura√ß√£o do Vite
        if grep -q "host: '0.0.0.0'" frontend/vite.config.ts; then
            echo -e "${GREEN}‚úÖ Vite configurado para acesso externo${NC}"
        else
            echo -e "${RED}‚ùå Vite n√£o configurado para acesso externo${NC}"
        fi
    else
        echo -e "${RED}‚ùå vite.config.ts n√£o encontrado${NC}"
    fi
else
    echo -e "${RED}‚ùå Diret√≥rio frontend n√£o encontrado${NC}"
    exit 1
fi
echo ""

# Verificar documenta√ß√£o
echo -e "${YELLOW}4. Verificando documenta√ß√£o...${NC}"
if [ -f "docs/development/WSL-SETUP-GUIDE.md" ]; then
    echo -e "${GREEN}‚úÖ Guia WSL encontrado${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Guia WSL n√£o encontrado${NC}"
fi

if [ -f "docs/user-guides/MANUAL-DE-USO.md" ]; then
    echo -e "${GREEN}‚úÖ Manual do usu√°rio encontrado${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Manual do usu√°rio n√£o encontrado${NC}"
fi
echo ""

# Verificar scripts
echo -e "${YELLOW}5. Verificando scripts...${NC}"
if [ -f "start-wsl-dev.sh" ]; then
    echo -e "${GREEN}‚úÖ Script WSL encontrado${NC}"
    if [ -x "start-wsl-dev.sh" ]; then
        echo -e "${GREEN}‚úÖ Script WSL √© execut√°vel${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Tornando script execut√°vel...${NC}"
        chmod +x start-wsl-dev.sh
        echo -e "${GREEN}‚úÖ Script agora √© execut√°vel${NC}"
    fi
else
    echo -e "${RED}‚ùå Script start-wsl-dev.sh n√£o encontrado${NC}"
fi
echo ""

# Testar instala√ß√£o das depend√™ncias (sem executar o servidor)
echo -e "${YELLOW}6. Testando instala√ß√£o de depend√™ncias...${NC}"
cd frontend

if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  node_modules n√£o encontrado, instalando depend√™ncias...${NC}"
    npm install
fi

if [ -d "node_modules" ]; then
    echo -e "${GREEN}‚úÖ Depend√™ncias instaladas${NC}"
else
    echo -e "${RED}‚ùå Falha na instala√ß√£o das depend√™ncias${NC}"
    exit 1
fi

cd ..
echo ""

# Verificar portas dispon√≠veis
echo -e "${YELLOW}7. Verificando portas...${NC}"
if netstat -tlnp 2>/dev/null | grep -q ":5173 "; then
    echo -e "${YELLOW}‚ö†Ô∏è  Porta 5173 j√° est√° em uso${NC}"
    echo -e "${YELLOW}   Para liberar: sudo lsof -ti:5173 | xargs sudo kill -9${NC}"
else
    echo -e "${GREEN}‚úÖ Porta 5173 dispon√≠vel${NC}"
fi
echo ""

# Resumo final
echo -e "${BLUE}=====================================${NC}"
echo -e "${BLUE}         RESUMO DA VERIFICA√á√ÉO       ${NC}"
echo -e "${BLUE}=====================================${NC}"
echo ""
echo -e "${GREEN}‚úÖ Ambiente WSL configurado${NC}"
echo -e "${GREEN}‚úÖ Depend√™ncias instaladas${NC}"
echo -e "${GREEN}‚úÖ Vite configurado para WSL${NC}"
echo -e "${GREEN}‚úÖ Scripts e documenta√ß√£o prontos${NC}"
echo ""
echo -e "${YELLOW}üìã PR√ìXIMOS PASSOS:${NC}"
echo -e "${YELLOW}1. Execute: ./start-wsl-dev.sh${NC}"
echo -e "${YELLOW}2. Acesse no Windows: http://${WSL_IP}:5173${NC}"
echo -e "${YELLOW}3. Para desenvolvimento: code .${NC}"
echo ""
echo -e "${BLUE}=====================================${NC}"
echo -e "${BLUE}   Verifica√ß√£o conclu√≠da com sucesso!${NC}"
echo -e "${BLUE}=====================================${NC}"
