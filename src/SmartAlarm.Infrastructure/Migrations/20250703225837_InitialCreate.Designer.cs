// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartAlarm.Infrastructure.Data;

#nullable disable

namespace SmartAlarm.Infrastructure.Migrations
{
    [DbContext(typeof(SmartAlarmDbContext))]
    [Migration("20250703225837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Alarm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Enabled");

                    b.Property<DateTime?>("LastTriggeredAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastTriggeredAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("Time");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Alarms_UserId");

                    b.ToTable("Alarms", (string)null);
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Integration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid>("AlarmId")
                        .HasColumnType("TEXT")
                        .HasColumnName("AlarmId");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("Configuration");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("LastExecutedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastExecutedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Provider");

                    b.HasKey("Id");

                    b.HasIndex("AlarmId")
                        .HasDatabaseName("IX_Integrations_AlarmId");

                    b.HasIndex("Provider")
                        .HasDatabaseName("IX_Integrations_Provider");

                    b.ToTable("Integrations", (string)null);
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Routine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("Actions");

                    b.Property<Guid>("AlarmId")
                        .HasColumnType("TEXT")
                        .HasColumnName("AlarmId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("AlarmId")
                        .HasDatabaseName("IX_Routines_AlarmId");

                    b.ToTable("Routines", (string)null);
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<Guid>("AlarmId")
                        .HasColumnType("TEXT")
                        .HasColumnName("AlarmId");

                    b.Property<int>("DaysOfWeek")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DaysOfWeek");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<int>("Recurrence")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Recurrence");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("Time");

                    b.HasKey("Id");

                    b.HasIndex("AlarmId")
                        .HasDatabaseName("IX_Schedules_AlarmId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Schedules_IsActive");

                    b.ToTable("Schedules", (string)null);
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastLoginAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Email");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Integration", b =>
                {
                    b.HasOne("SmartAlarm.Domain.Entities.Alarm", null)
                        .WithMany("Integrations")
                        .HasForeignKey("AlarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Routine", b =>
                {
                    b.HasOne("SmartAlarm.Domain.Entities.Alarm", null)
                        .WithMany("Routines")
                        .HasForeignKey("AlarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("SmartAlarm.Domain.Entities.Alarm", null)
                        .WithMany("Schedules")
                        .HasForeignKey("AlarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartAlarm.Domain.Entities.Alarm", b =>
                {
                    b.Navigation("Integrations");

                    b.Navigation("Routines");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
