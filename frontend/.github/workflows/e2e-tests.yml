name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: smartalarm_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6380:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
      
    - name: Build application
      working-directory: ./frontend
      run: npm run build
      
    - name: Run E2E tests
      working-directory: ./frontend
      run: npm run test:e2e:ci
      env:
        E2E_BASE_URL: http://localhost:5173
        E2E_BACKEND_URL: http://localhost:5000
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/test-results/
        retention-days: 30

  test-docker:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install Playwright
      working-directory: ./frontend
      run: npx playwright install --with-deps chromium
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Start test infrastructure
      working-directory: ./frontend
      run: docker-compose -f docker-compose.test.yml up -d test-database test-redis
      
    - name: Wait for services
      run: |
        timeout 60 bash -c 'until docker exec smart-alarm-test-db pg_isready -U testuser -d smartalarm_test; do sleep 2; done'
        timeout 30 bash -c 'until docker exec smart-alarm-test-redis redis-cli ping | grep PONG; do sleep 2; done'
      
    - name: Run E2E tests with Docker
      working-directory: ./frontend
      run: npm run test:e2e
      env:
        E2E_BASE_URL: http://localhost:5173
        DATABASE_URL: postgresql://testuser:testpass@localhost:5433/smartalarm_test
        REDIS_URL: redis://localhost:6380
        CI: true
        
    - name: Stop test infrastructure
      if: always()
      working-directory: ./frontend
      run: docker-compose -f docker-compose.test.yml down
      
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-e2e-report
        path: frontend/test-results/
        retention-days: 30

  accessibility:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install Playwright
      working-directory: ./frontend
      run: npx playwright install --with-deps chromium
      
    - name: Run accessibility tests
      working-directory: ./frontend
      run: npx playwright test --grep "accessibility"
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: frontend/test-results/
        retention-days: 30

  mobile:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install Playwright
      working-directory: ./frontend
      run: npx playwright install --with-deps webkit
      
    - name: Run mobile tests
      working-directory: ./frontend
      run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      env:
        CI: true
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-report
        path: frontend/test-results/
        retention-days: 30