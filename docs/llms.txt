# Smart Alarm

> A modern, serverless backend platform for intelligent alarm and routine management, built with accessibility, security, and scalability in mind. The system leverages Clean Architecture, multi-cloud compatibility, and comprehensive observability to deliver a robust solution for managing alarms, AI-powered insights, and external integrations specifically designed for neurodivergent users.

Smart Alarm is a .NET 8-based microservices platform designed for OCI Functions deployment, consisting of three main services: Alarm Service for core alarm management, AI Service for ML.NET-powered behavioral analysis, and Integration Service for external API integrations. The system prioritizes accessibility for neurodivergent users, comprehensive security with JWT/FIDO2 authentication, and multi-provider compatibility for databases, storage, and secrets management.

## Documentation

- [Main README](README.md): Primary project documentation and getting started guide
- [Contributing Guide](CONTRIBUTING.md): Guidelines for contributing with neurodivergent-focused development principles
- [Development Scripts](README-dev-scripts.md): Scripts and automation tools for development workflow
- [License](LICENSE): Business Source License (BSL) terms and conditions
- [Documentation Overview](docs/README.md): Complete documentation structure and navigation guide

## Architecture & Design

- [Project Brief](memory-bank/projectbrief.md): Core objectives, scope, and constraints
- [System Patterns](memory-bank/systemPatterns.md): Architectural patterns, code organization, and naming conventions
- [Architecture Overview](docs/architecture/architectureOverview.md): Comprehensive system design philosophy and patterns
- [Domain Model](docs/domain-model.md): Core business entities and domain logic structure
- [ADR Index](docs/architecture/README.md): Architecture decision records and technical decisions

## API Specifications

- [Alarm Endpoints](docs/api/alarms.endpoints.md): RESTful API documentation for alarm management
- [API Error Handling](docs/api/error-handling.md): Error response patterns and status codes
- [Swagger Access](docs/api/swagger-access.md): API documentation access and configuration

## Development & Testing

- [Development Environment](docs/dev-environment-docs.md): Local development setup and configuration
- [Testing Overview](tests/README.md): Testing strategy, patterns, and execution guidelines
- [Integration Tests](tests/README-docker-test-integration.md): Docker-based integration testing setup
- [Infrastructure README](src/SmartAlarm.Infrastructure/README.md): Infrastructure layer patterns and implementations

## Deployment & Operations

- [Deployment Strategy](docs/deployment/deployment-strategy.md): Complete deployment approach and containerization
- [KeyVault Configuration](docs/KeyVault-Configuration.md): Multi-provider secrets management setup
- [Monitoring & Runbooks](docs/monitoring/runbooks.md): Operational procedures and monitoring setup
- [Docker Compose Dev](docker-compose.dev.yml): Development environment orchestration
- [Production Settings](appsettings.Production.json): Production configuration template

## Security & Compliance

- [Security Architecture](docs/architecture/security-architecture.md): Comprehensive security design and implementation
- [FIDO2 Implementation](docs/security/fido2Implementation.md): Authentication system implementation details
- [JWT/FIDO2 Step-by-Step](docs/architecture/jwt-fido2-auth-stepbystep.md): Authentication flow documentation

## Services Documentation

- [AI Service Documentation](docs/ai-service/): Machine learning integration and behavioral analysis
- [Alarm Service Documentation](docs/alarm-service/): Core alarm management service details
- [Integration Service Documentation](docs/integration-service/): External API integration patterns

## Memory Bank & Context

- [Product Context](memory-bank/productContext.md): Business context and user experience goals
- [Technical Context](memory-bank/techContext.md): Technology stack, dependencies, and constraints
- [Active Context](memory-bank/activeContext.md): Current development focus and recent changes
- [Progress Status](memory-bank/progress.md): Current implementation status and known issues

## Optional

- [Accessibility Guidelines](docs/accessibility/): Neurodivergent-specific design principles
- [Technical Debt](docs/tech-debt/techDebt.md): Current technical debt inventory and remediation plans
- [Research Documentation](docs/research/): Research findings and analysis documentation
- [GitHub Copilot Instructions](.github/copilot-instructions.md): AI assistant configuration for project-specific patterns
- [Development Container](devcontainer/README.md): VS Code development container configuration
